<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>doubanhelp</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.douban.help/"/>
  <updated>2019-12-31T13:25:45.518Z</updated>
  <id>http://blog.douban.help/</id>
  
  <author>
    <name>bazinga</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年12月黑苹果折腾笔记及经验分享</title>
    <link href="http://blog.douban.help/2019/12/31/2019%E5%B9%B412%E6%9C%88%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0%E5%8F%8A%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    <id>http://blog.douban.help/2019/12/31/2019年12月黑苹果折腾笔记及经验分享/</id>
    <published>2019-12-31T13:03:12.000Z</published>
    <updated>2019-12-31T13:25:45.518Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的配置"><a href="#我的配置" class="headerlink" title="我的配置"></a>我的配置</h2><ol>
<li>CPU: Intel i5 4590</li>
<li>主板: 华硕B85 Pro Gamer</li>
<li>显卡: 蓝宝石 RX570 4G</li>
</ol>
<h2 id="折腾方法"><a href="#折腾方法" class="headerlink" title="折腾方法"></a>折腾方法</h2><ol>
<li>下载<a href="https://blog.daliansky.net/macOS-Catalina-10.15.2-19C57-Release-version-with-Clover-5100-original-image-Double-EFI-Version.html" target="_blank" rel="external">黑果小兵的10.15.2的镜像</a></li>
<li>balenaEthcer写入镜像到一个优盘</li>
<li>开机设置BIOS里为优盘启动</li>
<li>安装macos</li>
<li>进入macos系统后，打开clover configurator，打开左侧的<code>Mount EFI</code>，查看右侧的<code>Efi Partitions</code>，分别<code>Mount Partition</code>硬盘和启动优盘，然后分别<code>Open Partition</code>，把启动优盘里的所有文件拷贝进硬盘里，这就实现了硬盘启动</li>
<li>重启电脑，关闭BIOS里的串行设备！（解决了睡眠唤醒后黑屏的问题！！！）</li>
<li>设置启动顺序，为硬盘上的UEFI开头的启动项！</li>
<li>打开clover configurator，挂载本地硬盘，打开<code>EFI</code>文件夹，右键点击<code>config.plist</code>，选择<code>clover configurator</code>打开，选择左侧的<code>SMBIOS</code>，选择右侧的“上下”箭头的图标，选择<code>iMacPro1,1</code>的机型（开启独立显卡的硬件加速）</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://blog.csdn.net/weixin_43845039/article/details/88701810" target="_blank" rel="external">i5 4590+ASUS B85 Pro Gamer+RX570黑苹果10.14.3的EFI分享</a></li>
<li>/2019/12/31/2019年12月黑苹果折腾笔记及经验分享/notes.pdf
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;我的配置&quot;&gt;&lt;a href=&quot;#我的配置&quot; class=&quot;headerlink&quot; title=&quot;我的配置&quot;&gt;&lt;/a&gt;我的配置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;CPU: Intel i5 4590&lt;/li&gt;
&lt;li&gt;主板: 华硕B85 Pro Gamer&lt;/li&gt;
&lt;li
    
    </summary>
    
    
      <category term="apple 黑苹果 装机" scheme="http://blog.douban.help/tags/apple-%E9%BB%91%E8%8B%B9%E6%9E%9C-%E8%A3%85%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>JS Date函数比较</title>
    <link href="http://blog.douban.help/2019/04/03/JS-Date%E5%87%BD%E6%95%B0%E6%AF%94%E8%BE%83/"/>
    <id>http://blog.douban.help/2019/04/03/JS-Date函数比较/</id>
    <published>2019-04-03T13:09:46.000Z</published>
    <updated>2019-04-03T13:10:41.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/04/03/JS-Date函数比较/date.png" alt="date.png" title="">
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/04/03/JS-Date函数比较/date.png&quot; alt=&quot;date.png&quot; title=&quot;&quot;&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue基础</title>
    <link href="http://blog.douban.help/2019/03/27/Vue%E5%9F%BA%E7%A1%80/"/>
    <id>http://blog.douban.help/2019/03/27/Vue基础/</id>
    <published>2019-03-27T07:16:26.000Z</published>
    <updated>2019-03-27T07:17:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-基础"><a href="#Vue-基础" class="headerlink" title="Vue 基础"></a>Vue 基础</h1><ol>
<li><p>由于 JavaScript 的限制，Vue 不能检测以下变动的数组：</p>
<ol>
<li><p>当你利用索引直接设置一个项时，这样写不会触发更新：</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vm.items[indexOfItem] = newValue</div></pre></td></tr></table></figure>
<p> 正确的方法：</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Vue.set</span></div><div class="line">Vue.set(vm.items, indexOfItem, newValue)</div><div class="line"><span class="comment">// Array.prototype.splice</span></div><div class="line">vm.items.splice(indexOfItem, <span class="number">1</span>, newValue)</div><div class="line"><span class="comment">// 你也可以使用 vm.$set 实例方法，该方法是全局方法 Vue.set 的一个别名：</span></div><div class="line">vm.$set(vm.items, indexOfItem, newValue)</div></pre></td></tr></table></figure>
</li>
<li><p>当你修改数组的长度时，这样写不会触发更新：</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vm.items.length = newLength</div></pre></td></tr></table></figure>
<p> 正确的方法：</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vm.items.splice(newLength)</div></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>不推荐同时使用 <code>v-if</code> 和 <code>v-for</code>。当 <code>v-if</code> 与 <code>v-for</code> 一起使用时，<code>v-for</code> 具有比 <code>v-if</code> 更高的优先级。</p>
</li>
<li>在使用 <code>v-for</code> 时，尽量提供 <code>key</code>。2.2.0+ 的版本里，当在组件中使用 <code>v-for</code> 时，<code>key</code> 现在是必须的。</li>
<li>使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 <code>v-on:click.prevent.self</code> 会阻止所有的点击，而 <code>v-on:click.self.prevent</code> 只会阻止对元素自身的点击。</li>
<li>选择框，如果 <code>v-model</code> 表达式的初始值未能匹配任何选项，<code>&lt;select&gt;</code> 元素将被渲染为“未选中”状态。在 iOS 中，这会使用户无法选择第一个选项。因为这样的情况下，iOS 不会触发 <code>change</code> 事件。因此，更推荐像上面这样提供一个值为空的禁用选项(<code>&lt;option disabled value=&quot;&quot;&gt;请选择&lt;/option&gt;</code>)。</li>
<li>如果要自动过滤用户输入的首尾空白字符，可以给 <code>v-model</code> 添加 <code>trim</code> 修饰符。</li>
<li>Vue 提供了一个 <code>$listeners</code> 属性，它是一个对象，里面包含了作用在这个组件上的所有监听器。有了这个 <code>$listeners</code> 属性，你就可以配合 <code>v-on=&quot;$listeners&quot;</code> 将所有的事件监听器指向这个组件的某个特定的子元素。</li>
<li><a href="https://cn.vuejs.org/v2/guide/components-custom-events.html#sync-%E4%BF%AE%E9%A5%B0%E7%AC%A6" target="_blank" rel="external"><code>.sync</code> 修饰符</a></li>
<li>插槽<ol>
<li>在向具名插槽提供内容的时候，我们可以在一个 <code>&lt;template&gt;</code> 元素上使用 <code>v-slot</code> 指令，并以 <code>v-slot</code> 的参数的形式提供其名称</li>
</ol>
</li>
<li>混入 <code>mixin</code><ol>
<li>同名钩子函数将混合为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子之前调用。</li>
<li>值为对象的选项，例如 <code>methods</code>, <code>components</code> 和 <code>directives</code>，将被混合为同一个对象。两个对象键名冲突时，取组件对象的键值对。</li>
</ol>
</li>
<li>$nextTick<ol>
<li>为了在数据变化之后等待 Vue 完成更新 DOM ，可以在数据变化之后立即使用 <code>Vue.nextTick(callback)</code> 。这样回调函数在 DOM 更新完成后就会调用。</li>
</ol>
</li>
<li><p>Vuex</p>
<ol>
<li><code>mapState</code> 获取状态</li>
<li><code>mapGetters</code> 将 store 中的 <code>getter</code> 映射到局部计算属性</li>
<li><p>更改 Vuex 的 store 中的状态的唯一方法是提交 <code>mutation</code>。</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">store.commit(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p><code>mutation</code> 必须是同步函数</p>
</li>
<li><code>mapMutations</code> 辅助函数将组件中的 <code>methods</code> 映射为 <code>store.commit</code> 调用（需要在根节点注入 store）</li>
<li><p>Action 类似于 mutation，不同在于：</p>
<ul>
<li>Action 提交的是 mutation，而不是直接变更状态。</li>
<li>Action 可以包含任意异步操作。<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">store.dispatch(<span class="string">'increment'</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><code>mapActions</code> 辅助函数将组件的 <code>methods</code> 映射为 <code>store.dispatch</code> 调用（需要先在根节点注入 store）</p>
</li>
<li>当网站足够大时，一个状态树下，根的部分字段繁多，解决这个问题就要模块化 vuex</li>
<li>默认情况下，模块内部的 action、mutation 和 getter 是注册在全局命名空间的——这样使得多个模块能够对同一 mutation 或 action 作出响应。<blockquote>
<p>如果希望你的模块具有更高的封装度和复用性，你可以通过添加 namespaced: true 的方式使其成为带命名空间的模块。当模块被注册后，它的所有 getter、action 及 mutation 都会自动根据模块注册的路径调整命名。</p>
</blockquote>
</li>
<li>完整的闭环是 store.dispatch(‘action’) -&gt; action -&gt; commit -&gt; mutation -&gt; getter -&gt; computed</li>
<li>建议是不论多简单的流程都跑完整个闭环，形成代码的统一，方便后期管理，在组件里只允许出现 dispatch 和 mapGetters，其余的流程都在名为 store 的 vuex 文件夹里进行</li>
<li>可以打印<code>this.$store</code>查看store里的数据</li>
<li>如果store的模块里没有加<code>namespaced</code>，则这个模块的数据是全局的，不需要加路径来引用</li>
</ol>
</li>
<li>v-show，v-if 用哪个？<ul>
<li>权限问题，只要涉及到权限相关的展示无疑要用 v-if</li>
<li>在没有权限限制下根据用户点击的频次选择，频繁切换的使用 v-show，不频繁切换的使用 v-if</li>
</ul>
</li>
<li>尽量保持每个组件 export default {} 内的方法顺序一致</li>
<li><p>在 webpack 里有个 externals，可以忽略不需要打包的库</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">externals: &#123;</div><div class="line"><span class="string">'vue'</span>: <span class="string">'Vue'</span>,</div><div class="line"><span class="string">'vue-router'</span>: <span class="string">'VueRouter'</span>,</div><div class="line"><span class="string">'vuex'</span>: <span class="string">'Vuex'</span>,</div><div class="line"><span class="string">'axios'</span>: <span class="string">'axios'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>nextTick <a href="https://juejin.im/post/5a6fdb846fb9a01cc0268618" target="_blank" rel="external">https://juejin.im/post/5a6fdb846fb9a01cc0268618</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vue-基础&quot;&gt;&lt;a href=&quot;#Vue-基础&quot; class=&quot;headerlink&quot; title=&quot;Vue 基础&quot;&gt;&lt;/a&gt;Vue 基础&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;由于 JavaScript 的限制，Vue 不能检测以下变动的数组：&lt;/p&gt;
&lt;ol&gt;
&lt;
    
    </summary>
    
    
      <category term="vue" scheme="http://blog.douban.help/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>capture banned website with charles and switchyomega</title>
    <link href="http://blog.douban.help/2018/06/25/capture-banned-website-with-charles-and-switchyomega/"/>
    <id>http://blog.douban.help/2018/06/25/capture-banned-website-with-charles-and-switchyomega/</id>
    <published>2018-06-25T04:08:35.000Z</published>
    <updated>2018-06-25T04:09:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了对某国外被墙的网站进行抓包，在网上搜索之后，发现很多说要关闭VPN才能用Charles抓包，明显这是不可能的。<br>于是想到把Charles作为代理服务器，让他连接VPN，然后浏览器把Charles作为代理，即可完成抓包。<br>即：VPN -&gt; Charles -&gt; 浏览器<br>首先在Charles中设置External Proxy Setting，设置为VPN软件在系统内设置的代理，此时Charles已经翻墙。<br><img src="/2018/06/25/capture-banned-website-with-charles-and-switchyomega/external.png" alt="external.png" title=""><br>由于浏览器默认使用系统的代理，所以打开预先在Chrome浏览器内安装的SwitchyOmega，增加如图的配置，即可让浏览器把Charles作为代理，并切换到该配置，<br><img src="/2018/06/25/capture-banned-website-with-charles-and-switchyomega/switch.png" alt="switch.png" title=""></p>
<p>参考：<a href="https://cloud.tencent.com/developer/article/1032655" target="_blank" rel="external">抓包神器之Charles，常用功能都在这里了</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了对某国外被墙的网站进行抓包，在网上搜索之后，发现很多说要关闭VPN才能用Charles抓包，明显这是不可能的。&lt;br&gt;于是想到把Charles作为代理服务器，让他连接VPN，然后浏览器把Charles作为代理，即可完成抓包。&lt;br&gt;即：VPN -&amp;gt; Charles
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>draw a triangle with rounded corners</title>
    <link href="http://blog.douban.help/2018/05/10/corners/"/>
    <id>http://blog.douban.help/2018/05/10/corners/</id>
    <published>2018-05-10T09:00:17.000Z</published>
    <updated>2018-05-10T09:04:09.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">    .line &#123;</div><div class="line">        width: 20px;</div><div class="line">        height: 200px;</div><div class="line">        background: red;</div><div class="line">        position: relative;</div><div class="line">        border-radius: 900px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .line:after,</div><div class="line">    .line:before &#123;</div><div class="line">        position: absolute;</div><div class="line">        content: '';</div><div class="line">        width: 20px;</div><div class="line">        background: red;</div><div class="line">        border-radius: 900px;</div><div class="line">        height: 200px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .line:after &#123;</div><div class="line">        transform: rotate(-60deg);</div><div class="line">        top: -44px;</div><div class="line">        right: -81px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .line:before &#123;</div><div class="line">        transform: rotate(60deg);</div><div class="line">        top: 46px;</div><div class="line">        right: -80px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .outer &#123;</div><div class="line">        width: 500px;</div><div class="line">        height: 500px;</div><div class="line">        display: flex;</div><div class="line">        justify-content: center;</div><div class="line">        align-items: center;</div><div class="line">        background: black;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    .inner &#123;</div><div class="line">        display: inline-block;</div><div class="line">        width: 0;</div><div class="line">        height: 0;</div><div class="line">        border-style: solid;</div><div class="line">        border-width: 80px 0 90px 150px;</div><div class="line">        position: absolute;</div><div class="line">        border-color: transparent transparent transparent red;</div><div class="line">        top: 10px;</div><div class="line">        right: -150px;</div><div class="line">    &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">'inner'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<img src="/2018/05/10/corners/trianglewithroundedcorners.png" alt="trianglewithroundedcorners.png" title="">
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>canvas still visible when outer div is set to overflow:hidden</title>
    <link href="http://blog.douban.help/2018/04/23/canvas-still-visible-when-outer-div-is-set-to-overflow-hidden/"/>
    <id>http://blog.douban.help/2018/04/23/canvas-still-visible-when-outer-div-is-set-to-overflow-hidden/</id>
    <published>2018-04-23T07:45:27.000Z</published>
    <updated>2018-04-23T07:46:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="answer from stackoverflow">https://stackoverflow.com/questions/10616668/how-to-hide-canvas-content-from-parent-rounded-corners-in-any-webkit-for-mac</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;answer from stackoverflow&quot;&gt;https://stackoverflow.com/questions/10616668/how-to-hide-canvas-content-from-parent-rounded-corners-i
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>tricks in chrome dev tools</title>
    <link href="http://blog.douban.help/2018/04/10/tricks-in-chrome-dev-tools/"/>
    <id>http://blog.douban.help/2018/04/10/tricks-in-chrome-dev-tools/</id>
    <published>2018-04-10T07:46:34.000Z</published>
    <updated>2018-04-10T07:49:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>看了google官方<a href="https://developers.google.com/web/tools/chrome-devtools/javascript/reference" target="_blank" rel="external">关于chrome dev tools调试的介绍</a>。<br>发现了两个很好用的功能：</p>
<ol>
<li><p>restart frame</p>
<img src="/2018/04/10/tricks-in-chrome-dev-tools/rf.jpg" alt="rf.jpg" title="">
</li>
<li><p>blackbox script，可以避免单步到库文件</p>
<img src="/2018/04/10/tricks-in-chrome-dev-tools/blackboxed.jpg" alt="blackboxed.jpg" title="">
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了google官方&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于chrome 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>how to modify server response with charles</title>
    <link href="http://blog.douban.help/2018/04/05/how-to-modify-server-response-with-charles/"/>
    <id>http://blog.douban.help/2018/04/05/how-to-modify-server-response-with-charles/</id>
    <published>2018-04-05T04:21:37.000Z</published>
    <updated>2018-04-05T04:55:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>网易云音乐在朋友圈刷了一波<a href="https://st.music.163.com/c/m2-spec/138/index.html?userid=52543138" target="_blank" rel="external">推广活动</a>，一进去要输入名字，但是我玩法比较怪，输入的是一些名人的名字，结果被提示“不是你的名字”。<br>于是，把网址放到chrome里，打开dev tool查看，发现提交到服务器进行了验证，而且只要命中名人名字中的两个字，就会被提示报错，你们的算法还挺细致的，哈哈。<br><img src="/2018/04/05/how-to-modify-server-response-with-charles/haha.png" alt="haha.png" title=""></p>
<p>比较了一下前端请求验证名字的请求后，服务器返回的验证结果，发现只有最后一个字段不同，猜测前端判断了这个结果，于是想到拦截修改服务器的返回结果，骗过前端程序。<br><img src="/2018/04/05/how-to-modify-server-response-with-charles/respdata.png" alt="respdata.png" title=""></p>
<h1 id="尝试了不同的方法"><a href="#尝试了不同的方法" class="headerlink" title="尝试了不同的方法"></a>尝试了不同的方法</h1><h2 id="map-local"><a href="#map-local" class="headerlink" title="map local"></a>map local</h2><ol>
<li>右键点击验证请求，选择<code>save response</code>，保存响应文件</li>
<li>按下<code>⌥⌘L</code>打开<code>Map Local Setting</code>对话框，并增加新的mapping<img src="/2018/04/05/how-to-modify-server-response-with-charles/maplocalmain.png" alt="maplocalmain.png" title="">
</li>
</ol>
<blockquote>
<p>再次尝试通过前端发送请求，确实修改了响应结果，但是由于保存的响应文件只有body的内容，没有header的内容，在这里报了一个跨域的错误，因此这个方法失败了。</p>
</blockquote>
<h2 id="rewrite"><a href="#rewrite" class="headerlink" title="rewrite"></a>rewrite</h2><ol>
<li>按下<code>⌥⌘L</code>打开<code>Rewrite Settings</code>对话框，直接输入需要重写的内容<img src="/2018/04/05/how-to-modify-server-response-with-charles/rewritesetting.png" alt="rewritesetting.png" title="">
</li>
</ol>
<blockquote>
<p>此时请求之后返回的结果只修改了body部分，别的部分都是原样输出，已经通过了前端程序的验证。</p>
</blockquote>
<h2 id="breakpoint"><a href="#breakpoint" class="headerlink" title="breakpoint"></a>breakpoint</h2><ol>
<li>右键点击请求，选择<code>breakpoint</code>，下断点</li>
<li>再次请求，修改响应结果<img src="/2018/04/05/how-to-modify-server-response-with-charles/bp1.png" alt="bp1.png" title="">
<img src="/2018/04/05/how-to-modify-server-response-with-charles/bp2.png" alt="bp2.png" title="">
<blockquote>
<p>可以在chrome里看到此时已经是刚刚修改后的响应结果了</p>
</blockquote>
</li>
</ol>
<h1 id="碰到的问题"><a href="#碰到的问题" class="headerlink" title="碰到的问题"></a>碰到的问题</h1><ol>
<li>有可能突然抓不到包，可以尝试<code>⇧⌘P</code>关闭<code>macOS proxy</code>，然后再次打开。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;网易云音乐在朋友圈刷了一波&lt;a href=&quot;https://st.music.163.com/c/m2-spec/138/index.htm
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>管理学习进度</title>
    <link href="http://blog.douban.help/2018/02/13/%E7%AE%A1%E7%90%86%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6/"/>
    <id>http://blog.douban.help/2018/02/13/管理学习进度/</id>
    <published>2018-02-13T00:01:17.000Z</published>
    <updated>2018-02-14T04:32:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么想到这个"><a href="#为什么想到这个" class="headerlink" title="为什么想到这个"></a>为什么想到这个</h2><p>工作以来，为了提升个人能力，一直不断松懈学习。之前看到一篇技术文章，令我感到反思的不是文章的内容，而是作者的学习方法，所以做了这样的思维导图：<br><img src="/2018/02/13/管理学习进度/study.png" alt="study.png" title=""></p>
<p>需求：</p>
<ol>
<li>进度规划</li>
<li>每日打卡</li>
<li>提醒</li>
</ol>
<h2 id="之前的做法"><a href="#之前的做法" class="headerlink" title="之前的做法"></a>之前的做法</h2><ol>
<li>打印日历进行记录（缺点是需要打印，且没有提醒）</li>
<li>利用 numbers 表格记录每日学习内容，完成之后便划掉（需要另外打开软件，无提醒，不方便修改）</li>
<li>利用 wunderlist 记录（无进度）</li>
</ol>
<h2 id="考虑结合-google-cal-进行管理"><a href="#考虑结合-google-cal-进行管理" class="headerlink" title="考虑结合 google cal 进行管理"></a>考虑结合 google cal 进行管理</h2><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><ol>
<li>多平台同步，web、mac、iphone等都可以看到</li>
<li>不需要另外的软件</li>
<li>可以利用 week calendar 进行快速标记完成，高亮等操作</li>
</ol>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li>在 google cal 上新建一个日历，以和其他日历内容区隔</li>
<li>下面是 week calendar 的主界面，可以看到我已经配置了一些日历内容<img src="/2018/02/13/管理学习进度/wcui.png" alt="wcui.png" title=""></li>
<li>打开右上角的设置<img src="/2018/02/13/管理学习进度/settings.png" alt="settings.png" title=""></li>
<li>点击工具菜单，可以配置快捷操作，我在这里设置了两个，一个是快速标记完成✅，另外一个是高亮<img src="/2018/02/13/管理学习进度/tools.png" alt="tools.png" title=""></li>
<li>配置 mac 日历，尝试同步</li>
<li>新增事件时，可以设置每日循环和到期日，这样子可以每天进行打卡</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么想到这个&quot;&gt;&lt;a href=&quot;#为什么想到这个&quot; class=&quot;headerlink&quot; title=&quot;为什么想到这个&quot;&gt;&lt;/a&gt;为什么想到这个&lt;/h2&gt;&lt;p&gt;工作以来，为了提升个人能力，一直不断松懈学习。之前看到一篇技术文章，令我感到反思的不是文章的内容，而
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>notes about some frequently used function</title>
    <link href="http://blog.douban.help/2018/01/18/notes-about-some-frequently-used-function/"/>
    <id>http://blog.douban.help/2018/01/18/notes-about-some-frequently-used-function/</id>
    <published>2018-01-18T14:00:36.000Z</published>
    <updated>2018-01-18T14:01:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>all src are tested with node v8.9.0</p>
</blockquote>
<h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><p>this func will not modify array itself<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [&#123;<span class="attr">a</span>:<span class="number">3</span>&#125;, <span class="number">2</span>, <span class="string">'fff'</span>]</div><div class="line">arr.forEach(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> item === <span class="string">'object'</span>) &#123;</div><div class="line">        item.a = <span class="string">'aaa'</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        item = <span class="number">3</span></div><div class="line">    &#125;</div><div class="line">&#125;)</div><div class="line"><span class="built_in">console</span>.log(arr)</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ &#123; a: <span class="string">'aaa'</span> &#125;, 2, <span class="string">'fff'</span> ]</div></pre></td></tr></table></figure>
<h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>returned item is a shallow copy</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> arr = [&#123;<span class="attr">a</span>:<span class="number">3</span>&#125;, <span class="number">4</span>, <span class="string">'fff'</span>]</div><div class="line"></div><div class="line"><span class="keyword">let</span> brr = arr.map(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> item === <span class="string">'object'</span>) &#123;</div><div class="line">        item.a = <span class="number">1111</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> item</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(arr)</div><div class="line"><span class="built_in">console</span>.log(brr)</div><div class="line"><span class="built_in">console</span>.log(arr[<span class="number">0</span>]===brr[<span class="number">0</span>])</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[ &#123; a: 1111 &#125;, 4, <span class="string">'fff'</span> ]</div><div class="line">[ &#123; a: 1111 &#125;, 4, <span class="string">'fff'</span> ]</div><div class="line"><span class="literal">true</span></div></pre></td></tr></table></figure>
<h3 id="func-which-will-return-new-object"><a href="#func-which-will-return-new-object" class="headerlink" title="func which will return new object"></a>func which will return new object</h3><p>concat<br>map</p>
<h3 id="in-place-func"><a href="#in-place-func" class="headerlink" title="in place func"></a>in place func</h3><p>reverse<br>sort</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;all src are tested with node v8.9.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;forEach&quot;&gt;&lt;a href=&quot;#forEach&quot; class=&quot;headerlink&quot; title=&quot;forEach&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>something about module in nodejs</title>
    <link href="http://blog.douban.help/2017/12/29/something-about-module-in-nodejs/"/>
    <id>http://blog.douban.help/2017/12/29/something-about-module-in-nodejs/</id>
    <published>2017-12-29T02:41:35.000Z</published>
    <updated>2017-12-29T02:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="require-object-is-just-a-shallow-copy-of-module-exports"><a href="#require-object-is-just-a-shallow-copy-of-module-exports" class="headerlink" title="require object is just a shallow copy of module exports"></a>require object is just a shallow copy of module exports</h2><p>test code as below:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// main.js</span></div><div class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'./mod'</span>)</div><div class="line"></div><div class="line">setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'in main'</span>, a.aaa)</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'in main'</span>, a.x)</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'======'</span>);</div><div class="line">&#125;, <span class="number">500</span>);</div><div class="line"></div><div class="line"><span class="comment">// mod.js</span></div><div class="line"><span class="keyword">let</span> aaa = &#123;<span class="attr">a</span>: <span class="number">3</span>, <span class="attr">b</span>: &#123;<span class="attr">xx</span>: <span class="number">1</span>&#125;&#125;</div><div class="line"><span class="keyword">let</span> x = <span class="number">1</span></div><div class="line">setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    aaa.a++;</div><div class="line">    aaa.b.xx += <span class="number">1</span>;</div><div class="line">    x++;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'in mod'</span>, aaa)</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'in mod'</span>, x)</div><div class="line">&#125;, <span class="number">500</span>);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = &#123;<span class="attr">aaa</span>: aaa, <span class="attr">x</span>: x&#125;;</div></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol>
<li><a href="https://www.zhihu.com/question/56820346" target="_blank" rel="external">require，import区别？</a></li>
<li><a href="http://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82" target="_blank" rel="external">Module 的加载实现</a></li>
<li><a href="http://imweb.io/topic/582293894067ce9726778be9" target="_blank" rel="external">Node中没搞明白require和import，你会被坑的很惨</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;require-object-is-just-a-shallow-copy-of-module-exports&quot;&gt;&lt;a href=&quot;#require-object-is-just-a-shallow-copy-of-module-exports&quot; class=&quot;h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>play with html5 video tag</title>
    <link href="http://blog.douban.help/2017/12/19/play-with-html5-video-tag/"/>
    <id>http://blog.douban.help/2017/12/19/play-with-html5-video-tag/</id>
    <published>2017-12-19T07:55:44.000Z</published>
    <updated>2017-12-19T08:21:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problems-encounted"><a href="#problems-encounted" class="headerlink" title="problems encounted"></a>problems encounted</h2><ol>
<li><p>when start play a video on iOS’s Safari and Wechat browser, it will enter fullscreen but not play in line</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">""</span> <span class="attr">playsInline</span>  <span class="attr">webkit-playsinline</span>=<span class="string">"true"</span> <span class="attr">x5-playsinline</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>video duration can be achieved when <code>durationchange</code> event fired</p>
</li>
<li><p><code>canplay</code> event will not fired when video loaded on iPhone iOS 11 Safari even I add <code>preload=&quot;auto&quot;</code> prop, but fired on iPad iOS 10 Safari</p>
</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="http://zhaoda.net/2014/10/30/html5-video-optimization/" target="_blank" rel="external">移动端 HTML5 video 视频播放优化实践</a></li>
<li><a href="https://github.com/gnipbao/iblog/issues/11" target="_blank" rel="external">视频H5 video标签最佳实践</a></li>
<li><a href="https://juejin.im/entry/59509faf6fb9a06bc7493041" target="_blank" rel="external">移动端 HTML5 video 视频播放实践</a></li>
<li><a href="https://webkit.org/blog/6784/new-video-policies-for-ios/" target="_blank" rel="external">New video Policies for iOS</a></li>
<li><a href="http://web.jobbole.com/92906/" target="_blank" rel="external">这几年，我在video上踩的坑</a></li>
<li><a href="https://github.com/Chimeejs/chimee/blob/master/doc/zh-cn/why-chimee-is-a-frame.md" target="_blank" rel="external">为什么要将 Chimee 设计成一个组件化框架？</a></li>
<li><a href="https://aotu.io/notes/2017/01/11/mobile-video/index.html" target="_blank" rel="external">视频H5のVideo标签在微信里的坑和技巧</a></li>
<li><a href="https://blog.brain1981.com/1399.html" target="_blank" rel="external">关于HTML5 video标签在安卓版微信浏览器内被强制全屏播放的问题</a></li>
<li><a href="https://developer.mozilla.org/en-US/Apps/Fundamentals/Audio_and_video_delivery/cross_browser_video_player" target="_blank" rel="external">Creating a cross-browser video player</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats" target="_blank" rel="external">Media formats for HTML audio and video</a></li>
<li><a href="http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp" target="_blank" rel="external">HTML 5 视频/音频参考手册</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;problems-encounted&quot;&gt;&lt;a href=&quot;#problems-encounted&quot; class=&quot;headerlink&quot; title=&quot;problems encounted&quot;&gt;&lt;/a&gt;problems encounted&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>some bash command</title>
    <link href="http://blog.douban.help/2017/12/14/some-bash-command/"/>
    <id>http://blog.douban.help/2017/12/14/some-bash-command/</id>
    <published>2017-12-14T07:46:04.000Z</published>
    <updated>2017-12-14T07:47:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="custom-command-in-zshrc"><a href="#custom-command-in-zshrc" class="headerlink" title="custom command in ~/.zshrc"></a>custom command in <code>~/.zshrc</code></h2><ol>
<li>find file in current dir and exclude some dirs:<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find . ! -path <span class="string">".*/node_modules/*"</span> ! -path <span class="string">"./.idea/*"</span> ! -path <span class="string">"./.git/*"</span> -name <span class="string">'*.png'</span></div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;custom-command-in-zshrc&quot;&gt;&lt;a href=&quot;#custom-command-in-zshrc&quot; class=&quot;headerlink&quot; title=&quot;custom command in ~/.zshrc&quot;&gt;&lt;/a&gt;custom command
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建react开发框架</title>
    <link href="http://blog.douban.help/2017/12/04/%E6%90%AD%E5%BB%BAreact%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    <id>http://blog.douban.help/2017/12/04/搭建react开发框架/</id>
    <published>2017-12-04T09:12:24.000Z</published>
    <updated>2017-12-19T07:54:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tutorial"><a href="#tutorial" class="headerlink" title="tutorial"></a>tutorial</h2><ol>
<li><a href="https://github.com/brickspert/blog/issues/1" target="_blank" rel="external">学习搭建react开发框架</a></li>
</ol>
<h2 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h2><ol>
<li><a href="https://www.w3schools.com/css/css_examples.asp" target="_blank" rel="external">CSS Examples</a></li>
<li><a href="https://www.w3schools.com/jquery/jquery_examples.asp" target="_blank" rel="external">jQuery Examples</a></li>
<li><a href="http://lesscss.org/" target="_blank" rel="external">Less</a></li>
</ol>
<h2 id="doc"><a href="#doc" class="headerlink" title="doc"></a>doc</h2><ol>
<li><a href="https://devdocs.io/" target="_blank" rel="external">dev docs 在线版Dash</a></li>
</ol>
<h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><ol>
<li><a href="https://zhuanlan.zhihu.com/p/30401565" target="_blank" rel="external">render和之前的生命周期函数请不要async！</a></li>
</ol>
<h2 id="html-css"><a href="#html-css" class="headerlink" title="html/css"></a>html/css</h2><ol>
<li><a href="http://www.iyunlu.com/view/css-xhtml/55.html" target="_blank" rel="external">那些年我们一起清除过的浮动</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tutorial&quot;&gt;&lt;a href=&quot;#tutorial&quot; class=&quot;headerlink&quot; title=&quot;tutorial&quot;&gt;&lt;/a&gt;tutorial&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/brickspert/b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>koa2 add router rules</title>
    <link href="http://blog.douban.help/2017/10/15/koa2-add-router-rules/"/>
    <id>http://blog.douban.help/2017/10/15/koa2-add-router-rules/</id>
    <published>2017-10-15T04:50:06.000Z</published>
    <updated>2017-10-15T04:56:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>when i try to add some route rules to koa2 app, <a href="https://gaianote.github.io/2017/04/24/koa2%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B3_%E8%B7%AF%E7%94%B1%E4%B8%8Ekoa-router/" target="_blank" rel="external">this article</a> showed me some new tips, and i modify his <code>controller.js</code> a bit so you can add http method easily.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">const</span> Router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>);</div><div class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router();</div><div class="line"></div><div class="line"><span class="keyword">const</span> METHOD_MAP = &#123;</div><div class="line">    <span class="string">'GET'</span>: router.get,</div><div class="line">    <span class="string">'POST'</span>: router.post,</div><div class="line">    <span class="string">'PUT'</span>: router.put,</div><div class="line">    <span class="string">'DELETE'</span>: router.delete,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_rule</span>(<span class="params">router, rule</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> method, path;</div><div class="line">    <span class="built_in">Object</span>.keys(rule).forEach(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</div><div class="line">        [method, path] = key.split(<span class="string">' '</span>);</div><div class="line">        METHOD_MAP[method].call(router, path, rule[key]);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`register URL mapping: <span class="subst">$&#123;method&#125;</span> <span class="subst">$&#123;path&#125;</span>`</span>);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_rules</span>(<span class="params">router</span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> files = fs.readdirSync(__dirname + <span class="string">'/controller'</span>);</div><div class="line">    <span class="keyword">let</span> js_files = files.filter(<span class="function">(<span class="params">file</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">return</span> file.endsWith(<span class="string">'.js'</span>);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> f <span class="keyword">of</span> js_files) &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`process controller: <span class="subst">$&#123;f&#125;</span>...`</span>);</div><div class="line">        <span class="keyword">let</span> rule = <span class="built_in">require</span>(__dirname + <span class="string">'/controller/'</span> + f);</div><div class="line">        add_rule(router, rule);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    add_rules(router);</div><div class="line">    <span class="keyword">return</span> router.routes();</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;when i try to add some route rules to koa2 app, &lt;a href=&quot;https://gaianote.github.io/2017/04/24/koa2%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E
    
    </summary>
    
    
      <category term="Node.js" scheme="http://blog.douban.help/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>wechat public account development</title>
    <link href="http://blog.douban.help/2017/09/30/wechat-public-account/"/>
    <id>http://blog.douban.help/2017/09/30/wechat-public-account/</id>
    <published>2017-09-30T13:19:54.000Z</published>
    <updated>2017-09-30T13:23:22.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>晚上买了一周的阿里云服务器，然后利用github上开源的nodejs库（<a href="https://github.com/node-webot/co-wechat" target="_blank" rel="external">https://github.com/node-webot/co-wechat</a> ，<a href="https://github.com/node-webot/co-wechat-api" target="_blank" rel="external">https://github.com/node-webot/co-wechat-api</a> ），搭建了API服务器，sftp上传到阿里云（阿里云提供了可以ssh登录到公网IP）上，就可以用了。</li>
<li>SSH上启动服务不能直接用node命令启动，必须用screen命令启动，避免ssh关闭的时候把服务也关闭掉（<a href="http://www.hutuseng.com/article/how-to-kill-all-detached-screen-session-in-linux" target="_blank" rel="external">http://www.hutuseng.com/article/how-to-kill-all-detached-screen-session-in-linux</a> ）。</li>
<li>Cyberduck是一款Mac上的可视化文件传输工具。</li>
<li>其实Webstorm也提供了SFTP上传功能，完全不需要其他工具。</li>
<li>利用nginx代理node程序的端口，对外提供80服务（<a href="http://frontenddev.org/article/ali-cloud-ecs-use-result-6-use-nginx-do-reverse-proxy-for-nodejs.html" target="_blank" rel="external">http://frontenddev.org/article/ali-cloud-ecs-use-result-6-use-nginx-do-reverse-proxy-for-nodejs.html</a> ）。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;晚上买了一周的阿里云服务器，然后利用github上开源的nodejs库（&lt;a href=&quot;https://github.com/node-webot/co-wechat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github
    
    </summary>
    
    
      <category term="wechat" scheme="http://blog.douban.help/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>Understanding Promise and async/await</title>
    <link href="http://blog.douban.help/2017/08/26/Understanding-Promise-and-async-await/"/>
    <id>http://blog.douban.help/2017/08/26/Understanding-Promise-and-async-await/</id>
    <published>2017-08-26T10:08:10.000Z</published>
    <updated>2017-08-26T11:04:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.risingstack.com/mastering-async-await-in-nodejs/" target="_blank" rel="external">Mastering Async Await in Node.js</a></p>
<p><a href="http://heeroluo.net/article/detail/130/async-flow-control" target="_blank" rel="external">http://heeroluo.net/article/detail/130/async-flow-control</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzIyMzAwNzExNg==&amp;mid=209354478&amp;idx=1&amp;sn=edd70e826b6f9e8a570024f431c5f7fe#rd" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzIyMzAwNzExNg==&amp;mid=209354478&amp;idx=1&amp;sn=edd70e826b6f9e8a570024f431c5f7fe#rd</a></p>
<p><a href="http://es6.ruanyifeng.com/#docs/async" target="_blank" rel="external">http://es6.ruanyifeng.co·m/#docs/async</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.risingstack.com/mastering-async-await-in-nodejs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering Async Await in Node.js&lt;/
    
    </summary>
    
    
      <category term="Node.js" scheme="http://blog.douban.help/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>mindmap for learning javascript</title>
    <link href="http://blog.douban.help/2017/08/02/mindmap-for-learning-javascript/"/>
    <id>http://blog.douban.help/2017/08/02/mindmap-for-learning-javascript/</id>
    <published>2017-08-02T12:48:00.000Z</published>
    <updated>2017-08-02T12:51:36.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/08/02/mindmap-for-learning-javascript/LearningJavascript.png" alt="LearningJavascript.png" title="">
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/08/02/mindmap-for-learning-javascript/LearningJavascript.png&quot; alt=&quot;LearningJavascript.png&quot; title=&quot;&quot;&gt;

    
    </summary>
    
    
      <category term="Node.js" scheme="http://blog.douban.help/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>tourial for node.js</title>
    <link href="http://blog.douban.help/2017/07/31/tourial-for-node-js/"/>
    <id>http://blog.douban.help/2017/07/31/tourial-for-node-js/</id>
    <published>2017-07-31T11:42:03.000Z</published>
    <updated>2017-07-31T11:54:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tourial"><a href="#Tourial" class="headerlink" title="Tourial"></a>Tourial</h1><p><a href="https://nodeschool.io/" target="_blank" rel="external">Node School</a><br><a href="https://wclimb.github.io/2017/07/12/Node-Koa2-Mysql-%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external">Node+Koa2+Mysql 搭建简易博客</a></p>
<h1 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h1><p><a href="https://www.quora.com/What-are-the-best-resources-for-learning-Node-js" target="_blank" rel="external">What are the best resources for learning Node.js?</a></p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="external">MDN JavaScript</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Tourial&quot;&gt;&lt;a href=&quot;#Tourial&quot; class=&quot;headerlink&quot; title=&quot;Tourial&quot;&gt;&lt;/a&gt;Tourial&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://nodeschool.io/&quot; target=&quot;_blank&quot; r
    
    </summary>
    
    
      <category term="Node.js" scheme="http://blog.douban.help/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>plan for the next 4 months</title>
    <link href="http://blog.douban.help/2017/07/20/planfornext4months/"/>
    <id>http://blog.douban.help/2017/07/20/planfornext4months/</id>
    <published>2017-07-20T11:56:58.000Z</published>
    <updated>2017-07-20T12:13:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="start-a-new-life"><a href="#start-a-new-life" class="headerlink" title="start a new life"></a>start a new life</h2><ol>
<li>read <em>Professional JavaScript for Web Developer</em> and make some reading notes</li>
<li>try to develop a blog site with KOA2</li>
<li>read blog about javascript</li>
<li>write down the problems’ resolution encountered in development</li>
<li>leetcode, dynamic programming</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;start-a-new-life&quot;&gt;&lt;a href=&quot;#start-a-new-life&quot; class=&quot;headerlink&quot; title=&quot;start a new life&quot;&gt;&lt;/a&gt;start a new life&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;read &lt;em
    
    </summary>
    
    
  </entry>
  
</feed>
